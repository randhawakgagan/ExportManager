@*@model ExportManager.DBModel.License *@

@model Tuple < ExportManager.DBModel.Country, ExportManager.DBModel.License>
@{
    //Layout = null;

   /* List<SelectListItem> selectList = new List<SelectListItem>();
    foreach (var c in ViewBag.Country_list)
    {
        SelectListItem i = new SelectListItem();
        i.Text = c.Name;
        i.Value = c.Id;
        selectList.Add(i);
    }*/
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>License</h4>
            <hr />
            <div class="table">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="control-label col-md-2">Country_list</label>
                    <div class="col-md-10">

                        @*@Html.DropDownListFor(m => m.Id, (SelectList)ViewBag.Country_list, " ", new { @class = "form-control" })
                            @Html.DropDownListFor(m => m.Id, (MultiSelectList)ViewBag.Country_list, " ", new { @class = "form-control" })



                             @Html.DropDownListFor(m => m.Id, (MultiSelectList)ViewBag.Country_list, " ", new {multiple = "multiple" })*@


                        @Html.ListBox("Name", (MultiSelectList)ViewBag.Country_list)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Item2.License_No, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Item2.License_No, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item2.License_No, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Item2.Expiry_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Item2.Expiry_Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item2.Expiry_Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Item2.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Item2.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Item2.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </body>
        </html>
